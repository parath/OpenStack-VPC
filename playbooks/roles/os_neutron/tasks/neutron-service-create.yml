---
# Copyright 2016, Stackmasters.eu

- name: Create neutron user
  os_user:
    state: present
    name: "{{ neutron_service_user_name }}"
    password: "{{ neutron_service_user_pass }}"
    domain: "{{ neutron_service_user_domain_id }}"
    default_project: "{{ neutron_service_project_name }}"
    region_name: "{{ neutron_service_region }}"
    auth: auth_url=http://{{ internal_vip }}:35357/v3 username=admin password={{ keystone_admin_user_password }}
  tags:
    - neutron-service

- name: Assosiate user with role
  os_user_role:
    user: "{{ neutron_service_user_name }}"
    role: "{{ neutron_service_role_name }}"
    project: "{{ neutron_service_project_name }}"
    auth: auth_url=http://{{ internal_vip }}:35357/v3 username=admin password={{ keystone_admin_user_password }}
  tags:
    - neutron-service

- name: Check if Neutron service is present
  shell: openstack service list
  register: neutron_service
  tags:
    - neutron-service

- name: Create Neutron service entity
  shell: source /root/openrc && openstack service create --name {{ neutron_service_user_name }} \
         --description "OpenStack Networking" network
  when: "neutron_service.stdout.find('neutron') == -1"
  tags:
    - neutron-service

- name: Check if Neutron endpoints are present
  shell: source /root/openrc && openstack endpoint list
  register: neutron_endpoint
  tags:
    - neutron-service
    - neutron-endpoint

- name: Create Neutron service endpoint
  shell: source /root/openrc && openstack endpoint create --region {{ neutron_service_region }} \
         network {{ item.key }} http://{{ item.value }}:9696
  when: "neutron_endpoint.stdout.find('neutron') == -1"
  with_items:
    - { key: "public", value: "{{ external_vip }}" }
    - { key: "internal", value: "{{ internal_vip }}" }
    - { key: "admin", value: "{{ internal_vip }}" }
  tags:
    - neutron-service
    - neutron-endpoint
